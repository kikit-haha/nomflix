{"version":3,"sources":["assets/blackBG.png","assets/noPosterBig.jpg","assets/noPosterSmall.jpg","api.js","Components/Loader.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Routes/Detail/index.js","Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Routes/Search/index.js","Routes/TV/TVPresenter.js","Routes/TV/TVContainer.js","Routes/TV/index.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/theme.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","movieApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Loader","color","size","Backdrop","props","bgImage","theme","mobile","Content","Cover","Data","Title","h3","ItemContainer","Item","span","Divider","Overview","p","DetailPresenter","result","error","loading","backdrop_path","require","poster_path","original_title","original_name","release_date","substring","first_air_date","vote_average","runtime","episode_run_time","genres","map","genre","index","length","name","overview","DetailContainer","state","componentDidMount","a","match","push","history","pathname","location","isMovie","includes","parsedId","parseInt","Number","isNaN","data","setState","this","React","Component","Grid","Section","title","children","Text","propTypes","text","PropTypes","string","isRequired","Message","Image","bgUrl","Rating","RatingL","Year","ImageContainer","Poster","imageUrl","rating","year","to","role","repeat","Math","round","HomePresenter","nowPlaying","upcoming","popular","movie","HomeContainer","results","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","SearchContainer","e","preventDefault","searchByTerm","target","TVPresenter","topRated","airingToday","TVContainer","SHeader","header","List","ul","li","current","SLink","Link","withRouter","RouterComponent","basename","process","path","Search","component","TV","Detail","exact","Home","from","GlobalStyles","createGlobalStyle","reset","mainColor","tablet","pc","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60e63c11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blackBG.152677e3.png\";","export default __webpack_public_path__ + \"static/media/noPosterBig.9fb7088f.jpg\";","export default __webpack_public_path__ + \"static/media/noPosterSmall.65e7269e.jpg\";","// import React from \"react\";\nimport axios from \"axios\";\n//네트워킹, 데이터만 다룰 파일\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"1a7d44b3b1402c416b6ca1bafd522a1a\",\n    language: \"en-US\",\n  },\n});\n\n//encodeURIComponent(url주소) url에서 인식하지못하는 특수문자들을(예를들어 한글) 사용가능한 16진수로 변환해준다\n//encodeURI(url주소) url에서 인식하지못하는 특수문자들을(예를들어 한글) 사용가능한 16진수로 변환해준다, 예약어는 제외(//, +, \", 등등)\n\nexport const movieApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: { append_to_response: \"videos\" },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Loader = () => (\n  <Container>\n    <ClipLoader color=\"#de3f47\" size={80} />\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  z-index: 0;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(5px);\n  opacity: 0.5;\n  @media ${(props) => props.theme.mobile} {\n    background-size: contain;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n  @media ${(props) => props.theme.mobile} {\n    flex-direction: column;\n    height: auto;\n  }\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover;\n\n  border-radius: 4px;\n  @media ${(props) => props.theme.mobile} {\n    width: 100%;\n    height: 100vh;\n  }\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media ${(props) => props.theme.mobile} {\n    width: 98%;\n    margin: 0 auto;\n  }\n`;\n\nconst Title = styled.h3`\n  font-size: 2rem;\n  margin-bottom: 20px;\n  @media ${(props) => props.theme.mobile} {\n    margin: 20px 0;\n  }\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n  @media ${(props) => props.theme.mobile} {\n    margin: 0;\n  }\n`;\nconst Item = styled.span`\n  margin: 0 4px;\n  @media ${(props) => props.theme.mobile} {\n    margin: 2px;\n  }\n`;\nconst Divider = styled.span`\n  margin: 0 10px;\n  @media ${(props) => props.theme.mobile} {\n    margin: 2px;\n  }\n`;\nconst Overview = styled.p`\n  font-size: 1rem;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n  @media ${(props) => props.theme.mobile} {\n    width: 100%;\n    margin: 20px 0;\n  }\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Backdrop\n        bgImage={\n          result.backdrop_path\n            ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\n            : require(\"../../assets/blackBG.png\")\n        }\n      />\n\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/w300${result.poster_path}`\n              : require(\"../../assets/noPosterBig.jpg\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>∙</Divider>\n            <Item>{result.vote_average}</Item>\n            <Divider>∙</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>∙</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `,\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  text: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nclass DetailContainer extends React.Component {\n  state = {\n    result: null,\n    error: null,\n    loading: true,\n  };\n\n  componentDidMount = async () => {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n      location: { pathname },\n    } = this.props;\n\n    this.isMovie = pathname.includes(\"/movie/\");\n\n    const parsedId = parseInt(id);\n\n    if (Number.isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n\n    try {\n      if (this.isMovie) {\n        ({ data: result } = await movieApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything by searching\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  };\n\n  render() {\n    const { result, error, loading } = this.state;\n\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n\nexport default DetailContainer;\n","import DetailContainer from \"./DetailContainer\";\nexport default DetailContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 80px;\n  }\n  margin: 0 auto;\n`;\n\nconst Title = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 20px;\n  display: inline-block;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(125px, auto));\n  grid-gap: 25px;\n  place-items: center;\n  margin: 10px auto 0 auto;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-weight: 700;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nContainer.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n  width: 120px;\n  height: 100%;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity linear 0.1s;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 100%;\n\n  display: flex;\n  justify-content: space-between;\n\n  padding: 0 10px 10px;\n  opacity: 0;\n  transition: opacity linear 0.1s;\n`;\n\nconst RatingL = styled.span`\n  text-align: justify;\n  font-size: 4px;\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  width: 120px;\n  height: 180px;\n  margin-bottom: 5px;\n\n  background-color: #2c3e50;\n\n  &:hover {\n    ${Image} {\n      opacity: 0.4;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Poster = ({ imageUrl, title, id, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w200${imageUrl}`\n              : require(\"../assets/noPosterSmall.jpg\")\n          }\n        />\n        <Rating>\n          <RatingL role=\"img\" aria-label=\"rating\">\n            {\"⭐️\".repeat(Math.round(rating / 2))}\n            {/* ⭐️ */}\n          </RatingL>\n          <span>{rating} / 10</span>\n        </Rating>\n      </ImageContainer>\n\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n          {nowPlaying.map((movie) => (\n            <Poster\n              title={movie.original_title}\n              imageUrl={movie.poster_path}\n              id={movie.id}\n              rating={movie.vote_average}\n              isMovie={true}\n              year={movie.release_date && movie.release_date.substring(0.4)}\n              key={movie.original_title}\n            />\n          ))}\n        </Section>\n      )}\n\n      {upcoming && upcoming.length > 0 && (\n        <Section title=\"Upcoming movies\">\n          {upcoming.map((movie) => (\n            <Poster\n              title={movie.original_title}\n              imageUrl={movie.poster_path}\n              id={movie.id}\n              rating={movie.vote_average}\n              isMovie={true}\n              year={movie.release_date && movie.release_date.substring(0.4)}\n              key={movie.original_title + movie.id}\n            />\n          ))}\n        </Section>\n      )}\n\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular movies\" key=\"2\">\n          {popular.map((movie) => (\n            <Poster\n              title={movie.original_title}\n              imageUrl={movie.poster_path}\n              id={movie.id}\n              rating={movie.vote_average}\n              isMovie={true}\n              year={movie.release_date && movie.release_date.substring(0.4)}\n              key={movie.original_title + \"key\"}\n            />\n          ))}\n        </Section>\n      )}\n\n      {error && <Message text={error} color=\"##74c3c\" />}\n    </Container>\n  );\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  text: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import { movieApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: false,\n  };\n\n  async componentDidMount() {\n    try {\n      this.setState({ loading: true });\n      const {\n        data: { results: nowPlaying },\n      } = await movieApi.nowPlaying();\n\n      const {\n        data: { results: upcoming },\n      } = await movieApi.upcoming();\n\n      const {\n        data: { results: popular },\n      } = await movieApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n\nexport default HomeContainer;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport { tvApi, movieApi } from \"api\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                id={movie.id}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0.4)}\n                key={movie.original_title}\n              />\n            ))}\n          </Section>\n        )}\n\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                id={show.id}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                key={show.original_name + \"key\"}\n              />\n            ))}\n          </Section>\n        )}\n\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#7f8c8d\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n  text: PropTypes.string,\n};\nexport default SearchPresenter;\n","import { movieApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nclass SearchContainer extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { searchTerm } = this.state;\n\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (e) => {\n    const {\n      target: { value },\n    } = e;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n\n    try {\n      const {\n        data: { results: movieResults },\n      } = await movieApi.search(searchTerm);\n\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find results\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, error, loading, searchTerm } = this.state;\n\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        error={error}\n        loading={loading}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n\nexport default SearchContainer;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"TV top Rated\">\n          {topRated.map((show) => (\n            <Poster\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              id={show.id}\n              rating={show.vote_average}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              key={show.original_name + show.poster_path}\n            />\n          ))}\n        </Section>\n      )}\n\n      {popular && popular.length > 0 && (\n        <Section title=\"TV popular\">\n          {popular.map((show) => (\n            <Poster\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              id={show.id}\n              rating={show.vote_average}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              key={show.original_name + show.vote_average}\n            />\n          ))}\n        </Section>\n      )}\n\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"Airing Today\">\n          {airingToday.map((show) => (\n            <Poster\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              id={show.id}\n              rating={show.vote_average}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              key={show.original_name + show.id}\n            />\n          ))}\n        </Section>\n      )}\n\n      {error && <Message text={error} />}\n    </Container>\n  );\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n//데이터는 컨테이너에서만 관리\n//프리젠터는 데이터를 받아서 보여주는 역할만 한다. 데이터의 유효성 체크할필요있음 propTypes 라이브러리를 사용해서 데이터의 유효성을 검증한다\nclass TVContainer extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: false,\n  };\n\n  componentDidMount = async () => {\n    try {\n      this.setState({ loading: true });\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n\nexport default TVContainer;\n","import TVContainer from \"./TVContainer\";\nexport default TVContainer;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n// withRouter로 컴포넌트를 감싸면 history, location, match,staticContext가 props로 들어온다\n// withRouter를 사용하면 router에 의해 호출된 컴포넌트가 아니더라도 history, location, match객체에 접근할수있게 해준다\n\nconst SHeader = styled.header`\n  background-color: rgba(20, 20, 20, 0.8);\n  color: #fff;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n  list-style: none;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  transition: border-bottom 0.5s ease-in-out;\n  border-bottom: 5px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: #fff;\n`;\n// withRouter로 컴포넌트를 감싸면\nconst Header = ({ location: { pathname } }) => {\n  return (\n    <SHeader>\n      <List>\n        <Item current={pathname === \"/\" ? true : false}>\n          <SLink to=\"/\">Movies</SLink>\n        </Item>\n        <Item current={pathname === \"/tv\" ? true : false}>\n          <SLink to=\"/tv\">TV</SLink>\n        </Item>\n        <Item current={pathname === \"/search\" ? true : false}>\n          <SLink to=\"/search\">Search</SLink>\n        </Item>\n      </List>\n    </SHeader>\n  );\n};\n\nexport default withRouter(Header);\n\n// export default withRouter((props) => (\n//   <SHeader>\n//     <List>\n//       <Item current={false}>\n//         <SLink to=\"/\">Movies</SLink>\n//       </Item>\n//       <Item current={true}>\n//         <SLink to=\"/tv\">TV</SLink>\n//       </Item>\n//       <Item current={false}>\n//         <SLink to=\"/search\">Search </SLink>\n//       </Item>\n//     </List>\n//   </SHeader>\n// ));\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport Detail from \"Routes/Detail\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\n\nconst RouterComponent = () => {\n  // composition은 두개이상의 Route를 랜더링하는방식\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Header />\n      <Switch>\n        <Route path=\"/search\">\n          <Search />\n        </Route>\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Route path=\"/\" exact component={Home} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default RouterComponent;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n  ${reset};\n\n  html,body{\n    width:100%;\n    height:100%;\n  }\n\n  body {\n    background-color: #303030;\n    color: #e6e6e6;\n    padding-top:50px;\n  }\n\n  a{\n    text-decoration:none;\n    color:inherit;\n  }\n\n    *{\n      box-sizing:border-box;\n    }\n  `;\n\nexport default GlobalStyles;\n","const size = {\n  mobile: \"768px\",\n  tablet: \"1023px\",\n  pc: \"1024px\",\n};\n\nconst theme = {\n  mainColor: \"#0a4297\",\n  mobile: `(max-width: ${size.mobile})`,\n  tablet: `(max-width: ${size.tablet})`,\n  pc: `(max-width: ${size.pc})`,\n};\n\nexport default theme;\n","import React, { Component } from \"react\";\nimport RouterComponent from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"./theme\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <ThemeProvider theme={theme}>\n          <RouterComponent />\n          <GlobalStyles />\n        </ThemeProvider>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}